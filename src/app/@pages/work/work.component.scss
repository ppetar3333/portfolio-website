@import "../../../sources/abstract/mixins";

.work {
  width: 100%;
  height: 100%;
  @include center-absolute;
  background-image: linear-gradient(rgba(7, 8, 9, 0.5), rgba(0, 0, 0, 0.5)),
    url("../../../assets/images/bg.jpg");
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
}

.work__info-wrapper {
  max-width: 400px;
  @media (max-width: 1200px) {
    padding: 0 30px;
  }
}

.work__wrapper {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  opacity: 0.1;
  transition: 0.5s all ease-in-out;
}

.work__info {
  color: black !important;
}


.work__slider-wrapper {
  display: flex;
  align-items: center;
  justify-content: space-around;
  min-height: 470px;

  @media (max-width: 1200px) {
    @include center-grid;
    text-align: center;
    min-height: 620px;
  }
}

.work__container {
  margin-top: 370px;
  text-align: center;

  @media (max-width: 1200px) {
    margin-top: 340px;
  }
}

.spacing {
  margin-top: -370px !important; 

  @media (max-width: 1200px) {
    margin-top: -340px !important;
  }
}

.fade-in {
  opacity: 1;
  transition: 0.5s all ease-in-out;
}

$cubeWidth: 250px;
$cubeHeight: 250px;
$cubeDepth: $cubeHeight;

.separator {
  margin-top: 40px;
}

/* 3D Cube */
.space3d {
  perspective: 1000px;
  width: $cubeWidth;
  height: $cubeHeight;
  text-align: center;
  display: inline-block;
}

._3dbox {
  display: inline-block;
  transition: all 0.85s cubic-bezier(0.175, 0.885, 0.32, 1.275);

  text-align: center;
  position: relative;
  width: 100%;
  height: 100%;
  transform-style: preserve-3d;
  transform: rotateX(-15deg) rotateY(15deg);
}

._3dface {
  overflow: hidden;
  position: absolute;

  border: 1px solid #888;
  background: #fff;
  box-shadow: inset 0 0 60px rgba(0, 0, 0, 0.1), 0 0 50px rgba(0, 0, 0, 0.3);
  color: #333;
  line-height: $cubeWidth;
  opacity: 1;
}

._3dface--front {
  width: $cubeWidth;
  height: $cubeHeight;
  transform: translate3d(0, 0, $cubeDepth / 2);
}

._3dface--top {
  width: $cubeWidth;
  height: $cubeDepth;
  transform: rotateX(90deg) translate3d(0, 0, $cubeHeight / 2);
}

._3dface--bottom {
  width: $cubeWidth;
  height: $cubeDepth;
  transform: rotateX(-90deg) translate3d(0, 0, $cubeHeight / 2);
}

._3dface--left {
  width: $cubeDepth;
  height: $cubeHeight;
  left: 50%;
  margin-left: -$cubeDepth / 2;
  transform: rotateY(-90deg) translate3d(0, 0, $cubeWidth / 2);
}

._3dface--right {
  width: $cubeDepth;
  height: $cubeHeight;
  left: 50%;
  margin-left: -$cubeDepth / 2;
  transform: rotateY(90deg) translate3d(0, 0, $cubeWidth / 2);
}

._3dface--back {
  width: $cubeWidth;
  height: $cubeHeight;
  transform: rotateY(180deg) translate3d(0, 0, $cubeDepth / 2);
}

#radio-left:checked ~ .space3d ._3dbox {
  transform: rotateY(90deg);
}

#radio-right:checked ~ .space3d ._3dbox {
  transform: rotateY(-90deg);
}

#radio-bottom:checked ~ .space3d ._3dbox {
  transform: rotateX(90deg);
}

#radio-top:checked ~ .space3d ._3dbox {
  transform: rotateX(-90deg);
}

#radio-back:checked ~ .space3d ._3dbox {
  transform: rotateY(180deg);
}

// Apply backgrounds
._3dface {
  width: 100% !important;
  height: 100% !important;
  background-position: center !important;
  background-repeat: repeat !important;
  background-size: cover !important;
}

.radio-button {
  margin: 0 7px;
  cursor: pointer;
  outline: 1px solid #999;
  appearance: none;
  -webkit-appearance: none;
  border: 0.1rem solid rgb(70, 70, 70);
  background-color: gray;
  border-radius: 50%;
  width: 15px;
  height: 15px;
}

::ng-deep .carousel-control-next {
  padding-left: 50px !important;

  @media (max-width: 1200px) {
    padding-left: 0px !important;
  }
}

.radio-button:hover {
  outline-color: gray;
}

.radio-button:checked {
  outline-color: gray;
  background-color: rgb(33, 33, 33);

  animation: outline-checked;
  animation-duration: 0.1s;
  animation-iteration-count: 4;
  animation-direction: alternate;
  animation-timing-function: linear;
}

@keyframes outline-checked {
  0% {
      outline-offset: 0;
  }

  100% {
      outline-offset: -0.5rem;
  }
}

.work__arrow {
  position: absolute;
  cursor: pointer;
}

.arrow-left {
  top: 44%;
  left: 1.2%;
}

.arrow-right {
  top: 44%;
  right: 1.2%;
}